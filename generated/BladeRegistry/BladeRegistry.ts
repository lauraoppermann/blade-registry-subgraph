// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AppNameRegisteredEvent extends ethereum.Event {
  get params(): AppNameRegisteredEvent__Params {
    return new AppNameRegisteredEvent__Params(this);
  }
}

export class AppNameRegisteredEvent__Params {
  _event: AppNameRegisteredEvent;

  constructor(event: AppNameRegisteredEvent) {
    this._event = event;
  }

  get appID(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get appName(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class AppRegisteredEvent extends ethereum.Event {
  get params(): AppRegisteredEvent__Params {
    return new AppRegisteredEvent__Params(this);
  }
}

export class AppRegisteredEvent__Params {
  _event: AppRegisteredEvent;

  constructor(event: AppRegisteredEvent) {
    this._event = event;
  }

  get appID(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AppSetOwnerEvent extends ethereum.Event {
  get params(): AppSetOwnerEvent__Params {
    return new AppSetOwnerEvent__Params(this);
  }
}

export class AppSetOwnerEvent__Params {
  _event: AppSetOwnerEvent;

  constructor(event: AppSetOwnerEvent) {
    this._event = event;
  }

  get appID(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get appOwnerID(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AppVersionRegisteredEvent extends ethereum.Event {
  get params(): AppVersionRegisteredEvent__Params {
    return new AppVersionRegisteredEvent__Params(this);
  }
}

export class AppVersionRegisteredEvent__Params {
  _event: AppVersionRegisteredEvent;

  constructor(event: AppVersionRegisteredEvent) {
    this._event = event;
  }

  get appID(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get appVersionID(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AppVersionURLSetEvent extends ethereum.Event {
  get params(): AppVersionURLSetEvent__Params {
    return new AppVersionURLSetEvent__Params(this);
  }
}

export class AppVersionURLSetEvent__Params {
  _event: AppVersionURLSetEvent;

  constructor(event: AppVersionURLSetEvent) {
    this._event = event;
  }

  get appID(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get appURL(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class IdDelegateRegisteredEvent extends ethereum.Event {
  get params(): IdDelegateRegisteredEvent__Params {
    return new IdDelegateRegisteredEvent__Params(this);
  }
}

export class IdDelegateRegisteredEvent__Params {
  _event: IdDelegateRegisteredEvent;

  constructor(event: IdDelegateRegisteredEvent) {
    this._event = event;
  }

  get id(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get delegate(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class IdDelegateRevokedEvent extends ethereum.Event {
  get params(): IdDelegateRevokedEvent__Params {
    return new IdDelegateRevokedEvent__Params(this);
  }
}

export class IdDelegateRevokedEvent__Params {
  _event: IdDelegateRevokedEvent;

  constructor(event: IdDelegateRevokedEvent) {
    this._event = event;
  }

  get id(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get delegate(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class IdNameRegisteredEvent extends ethereum.Event {
  get params(): IdNameRegisteredEvent__Params {
    return new IdNameRegisteredEvent__Params(this);
  }
}

export class IdNameRegisteredEvent__Params {
  _event: IdNameRegisteredEvent;

  constructor(event: IdNameRegisteredEvent) {
    this._event = event;
  }

  get id(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class IdURLSetEvent extends ethereum.Event {
  get params(): IdURLSetEvent__Params {
    return new IdURLSetEvent__Params(this);
  }
}

export class IdURLSetEvent__Params {
  _event: IdURLSetEvent;

  constructor(event: IdURLSetEvent) {
    this._event = event;
  }

  get id(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get url(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class IdentityCreatedEvent extends ethereum.Event {
  get params(): IdentityCreatedEvent__Params {
    return new IdentityCreatedEvent__Params(this);
  }
}

export class IdentityCreatedEvent__Params {
  _event: IdentityCreatedEvent;

  constructor(event: IdentityCreatedEvent) {
    this._event = event;
  }

  get id(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OrgCreatedEvent extends ethereum.Event {
  get params(): OrgCreatedEvent__Params {
    return new OrgCreatedEvent__Params(this);
  }
}

export class OrgCreatedEvent__Params {
  _event: OrgCreatedEvent;

  constructor(event: OrgCreatedEvent) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orgID(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OrgMemberAddedEvent extends ethereum.Event {
  get params(): OrgMemberAddedEvent__Params {
    return new OrgMemberAddedEvent__Params(this);
  }
}

export class OrgMemberAddedEvent__Params {
  _event: OrgMemberAddedEvent;

  constructor(event: OrgMemberAddedEvent) {
    this._event = event;
  }

  get orgID(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get memberID(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OrgMemberRemovedEvent extends ethereum.Event {
  get params(): OrgMemberRemovedEvent__Params {
    return new OrgMemberRemovedEvent__Params(this);
  }
}

export class OrgMemberRemovedEvent__Params {
  _event: OrgMemberRemovedEvent;

  constructor(event: OrgMemberRemovedEvent) {
    this._event = event;
  }

  get orgID(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get memberID(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OrgNameRegisteredEvent extends ethereum.Event {
  get params(): OrgNameRegisteredEvent__Params {
    return new OrgNameRegisteredEvent__Params(this);
  }
}

export class OrgNameRegisteredEvent__Params {
  _event: OrgNameRegisteredEvent;

  constructor(event: OrgNameRegisteredEvent) {
    this._event = event;
  }

  get orgID(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class OrgOwnerChangedEvent extends ethereum.Event {
  get params(): OrgOwnerChangedEvent__Params {
    return new OrgOwnerChangedEvent__Params(this);
  }
}

export class OrgOwnerChangedEvent__Params {
  _event: OrgOwnerChangedEvent;

  constructor(event: OrgOwnerChangedEvent) {
    this._event = event;
  }

  get orgID(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class OrgURLSetEvent extends ethereum.Event {
  get params(): OrgURLSetEvent__Params {
    return new OrgURLSetEvent__Params(this);
  }
}

export class OrgURLSetEvent__Params {
  _event: OrgURLSetEvent;

  constructor(event: OrgURLSetEvent) {
    this._event = event;
  }

  get orgID(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get url(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class BladeRegistry extends ethereum.SmartContract {
  static bind(address: Address): BladeRegistry {
    return new BladeRegistry("BladeRegistry", address);
  }

  changeOrgOwner(orgID: Address, newOwner: Address): boolean {
    let result = super.call(
      "changeOrgOwner",
      "changeOrgOwner(address,address):(bool)",
      [ethereum.Value.fromAddress(orgID), ethereum.Value.fromAddress(newOwner)]
    );

    return result[0].toBoolean();
  }

  try_changeOrgOwner(
    orgID: Address,
    newOwner: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "changeOrgOwner",
      "changeOrgOwner(address,address):(bool)",
      [ethereum.Value.fromAddress(orgID), ethereum.Value.fromAddress(newOwner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  createApp(
    appID: Address,
    name: string,
    url: string,
    appType: i32,
    dependencies: Array<Address>
  ): boolean {
    let result = super.call(
      "createApp",
      "createApp(address,string,string,uint8,address[]):(bool)",
      [
        ethereum.Value.fromAddress(appID),
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(url),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(appType)),
        ethereum.Value.fromAddressArray(dependencies)
      ]
    );

    return result[0].toBoolean();
  }

  try_createApp(
    appID: Address,
    name: string,
    url: string,
    appType: i32,
    dependencies: Array<Address>
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "createApp",
      "createApp(address,string,string,uint8,address[]):(bool)",
      [
        ethereum.Value.fromAddress(appID),
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(url),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(appType)),
        ethereum.Value.fromAddressArray(dependencies)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  createAppVersion(
    appID: Address,
    appVersionID: Address,
    url: string
  ): boolean {
    let result = super.call(
      "createAppVersion",
      "createAppVersion(address,address,string):(bool)",
      [
        ethereum.Value.fromAddress(appID),
        ethereum.Value.fromAddress(appVersionID),
        ethereum.Value.fromString(url)
      ]
    );

    return result[0].toBoolean();
  }

  try_createAppVersion(
    appID: Address,
    appVersionID: Address,
    url: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "createAppVersion",
      "createAppVersion(address,address,string):(bool)",
      [
        ethereum.Value.fromAddress(appID),
        ethereum.Value.fromAddress(appVersionID),
        ethereum.Value.fromString(url)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  createIdentity(name: string, url: string, idDelegate: Address): boolean {
    let result = super.call(
      "createIdentity",
      "createIdentity(string,string,address):(bool)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(url),
        ethereum.Value.fromAddress(idDelegate)
      ]
    );

    return result[0].toBoolean();
  }

  try_createIdentity(
    name: string,
    url: string,
    idDelegate: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "createIdentity",
      "createIdentity(string,string,address):(bool)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(url),
        ethereum.Value.fromAddress(idDelegate)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  createOrganization(orgID: Address, name: string, url: string): boolean {
    let result = super.call(
      "createOrganization",
      "createOrganization(address,string,string):(bool)",
      [
        ethereum.Value.fromAddress(orgID),
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(url)
      ]
    );

    return result[0].toBoolean();
  }

  try_createOrganization(
    orgID: Address,
    name: string,
    url: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "createOrganization",
      "createOrganization(address,string,string):(bool)",
      [
        ethereum.Value.fromAddress(orgID),
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(url)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getAppForVersion(appVersionID: Address): Address {
    let result = super.call(
      "getAppForVersion",
      "getAppForVersion(address):(address)",
      [ethereum.Value.fromAddress(appVersionID)]
    );

    return result[0].toAddress();
  }

  try_getAppForVersion(appVersionID: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAppForVersion",
      "getAppForVersion(address):(address)",
      [ethereum.Value.fromAddress(appVersionID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAppID(name: string): Address {
    let result = super.call("getAppID", "getAppID(string):(address)", [
      ethereum.Value.fromString(name)
    ]);

    return result[0].toAddress();
  }

  try_getAppID(name: string): ethereum.CallResult<Address> {
    let result = super.tryCall("getAppID", "getAppID(string):(address)", [
      ethereum.Value.fromString(name)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAppOwner(appID: Address): Address {
    let result = super.call("getAppOwner", "getAppOwner(address):(address)", [
      ethereum.Value.fromAddress(appID)
    ]);

    return result[0].toAddress();
  }

  try_getAppOwner(appID: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAppOwner",
      "getAppOwner(address):(address)",
      [ethereum.Value.fromAddress(appID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAppOwnerByName(name: string): Address {
    let result = super.call(
      "getAppOwnerByName",
      "getAppOwnerByName(string):(address)",
      [ethereum.Value.fromString(name)]
    );

    return result[0].toAddress();
  }

  try_getAppOwnerByName(name: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAppOwnerByName",
      "getAppOwnerByName(string):(address)",
      [ethereum.Value.fromString(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDelegate(id: Address): Address {
    let result = super.call("getDelegate", "getDelegate(address):(address)", [
      ethereum.Value.fromAddress(id)
    ]);

    return result[0].toAddress();
  }

  try_getDelegate(id: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getDelegate",
      "getDelegate(address):(address)",
      [ethereum.Value.fromAddress(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getIdentity(name: string): Address {
    let result = super.call("getIdentity", "getIdentity(string):(address)", [
      ethereum.Value.fromString(name)
    ]);

    return result[0].toAddress();
  }

  try_getIdentity(name: string): ethereum.CallResult<Address> {
    let result = super.tryCall("getIdentity", "getIdentity(string):(address)", [
      ethereum.Value.fromString(name)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getIdentityName(id: Address): string {
    let result = super.call(
      "getIdentityName",
      "getIdentityName(address):(string)",
      [ethereum.Value.fromAddress(id)]
    );

    return result[0].toString();
  }

  try_getIdentityName(id: Address): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getIdentityName",
      "getIdentityName(address):(string)",
      [ethereum.Value.fromAddress(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getIdentityURL(id: Address): string {
    let result = super.call(
      "getIdentityURL",
      "getIdentityURL(address):(string)",
      [ethereum.Value.fromAddress(id)]
    );

    return result[0].toString();
  }

  try_getIdentityURL(id: Address): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getIdentityURL",
      "getIdentityURL(address):(string)",
      [ethereum.Value.fromAddress(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getOrgID(name: string): Address {
    let result = super.call("getOrgID", "getOrgID(string):(address)", [
      ethereum.Value.fromString(name)
    ]);

    return result[0].toAddress();
  }

  try_getOrgID(name: string): ethereum.CallResult<Address> {
    let result = super.tryCall("getOrgID", "getOrgID(string):(address)", [
      ethereum.Value.fromString(name)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getOrgName(id: Address): string {
    let result = super.call("getOrgName", "getOrgName(address):(string)", [
      ethereum.Value.fromAddress(id)
    ]);

    return result[0].toString();
  }

  try_getOrgName(id: Address): ethereum.CallResult<string> {
    let result = super.tryCall("getOrgName", "getOrgName(address):(string)", [
      ethereum.Value.fromAddress(id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getOrgOwner(orgID: Address): Address {
    let result = super.call("getOrgOwner", "getOrgOwner(address):(address)", [
      ethereum.Value.fromAddress(orgID)
    ]);

    return result[0].toAddress();
  }

  try_getOrgOwner(orgID: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getOrgOwner",
      "getOrgOwner(address):(address)",
      [ethereum.Value.fromAddress(orgID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getOrgURL(id: Address): string {
    let result = super.call("getOrgURL", "getOrgURL(address):(string)", [
      ethereum.Value.fromAddress(id)
    ]);

    return result[0].toString();
  }

  try_getOrgURL(id: Address): ethereum.CallResult<string> {
    let result = super.tryCall("getOrgURL", "getOrgURL(address):(string)", [
      ethereum.Value.fromAddress(id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  isNameRegistered(name: string): boolean {
    let result = super.call(
      "isNameRegistered",
      "isNameRegistered(string):(bool)",
      [ethereum.Value.fromString(name)]
    );

    return result[0].toBoolean();
  }

  try_isNameRegistered(name: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isNameRegistered",
      "isNameRegistered(string):(bool)",
      [ethereum.Value.fromString(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOrgMember(orgID: Address, memberID: Address): boolean {
    let result = super.call(
      "isOrgMember",
      "isOrgMember(address,address):(bool)",
      [ethereum.Value.fromAddress(orgID), ethereum.Value.fromAddress(memberID)]
    );

    return result[0].toBoolean();
  }

  try_isOrgMember(
    orgID: Address,
    memberID: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOrgMember",
      "isOrgMember(address,address):(bool)",
      [ethereum.Value.fromAddress(orgID), ethereum.Value.fromAddress(memberID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isRevokedDelegateForID(id: Address, delegate: Address): boolean {
    let result = super.call(
      "isRevokedDelegateForID",
      "isRevokedDelegateForID(address,address):(bool)",
      [ethereum.Value.fromAddress(id), ethereum.Value.fromAddress(delegate)]
    );

    return result[0].toBoolean();
  }

  try_isRevokedDelegateForID(
    id: Address,
    delegate: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isRevokedDelegateForID",
      "isRevokedDelegateForID(address,address):(bool)",
      [ethereum.Value.fromAddress(id), ethereum.Value.fromAddress(delegate)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  registerName(appID: Address, name: string): boolean {
    let result = super.call(
      "registerName",
      "registerName(address,string):(bool)",
      [ethereum.Value.fromAddress(appID), ethereum.Value.fromString(name)]
    );

    return result[0].toBoolean();
  }

  try_registerName(appID: Address, name: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "registerName",
      "registerName(address,string):(bool)",
      [ethereum.Value.fromAddress(appID), ethereum.Value.fromString(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  setAppOwner(appID: Address, newOwner: Address): boolean {
    let result = super.call(
      "setAppOwner",
      "setAppOwner(address,address):(bool)",
      [ethereum.Value.fromAddress(appID), ethereum.Value.fromAddress(newOwner)]
    );

    return result[0].toBoolean();
  }

  try_setAppOwner(
    appID: Address,
    newOwner: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "setAppOwner",
      "setAppOwner(address,address):(bool)",
      [ethereum.Value.fromAddress(appID), ethereum.Value.fromAddress(newOwner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  setDelegate(idDelegate: Address): boolean {
    let result = super.call("setDelegate", "setDelegate(address):(bool)", [
      ethereum.Value.fromAddress(idDelegate)
    ]);

    return result[0].toBoolean();
  }

  try_setDelegate(idDelegate: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("setDelegate", "setDelegate(address):(bool)", [
      ethereum.Value.fromAddress(idDelegate)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  setURL(identity: Address, url: string): boolean {
    let result = super.call("setURL", "setURL(address,string):(bool)", [
      ethereum.Value.fromAddress(identity),
      ethereum.Value.fromString(url)
    ]);

    return result[0].toBoolean();
  }

  try_setURL(identity: Address, url: string): ethereum.CallResult<boolean> {
    let result = super.tryCall("setURL", "setURL(address,string):(bool)", [
      ethereum.Value.fromAddress(identity),
      ethereum.Value.fromString(url)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  setVersionURL(appVersionID: Address, url: string): boolean {
    let result = super.call(
      "setVersionURL",
      "setVersionURL(address,string):(bool)",
      [ethereum.Value.fromAddress(appVersionID), ethereum.Value.fromString(url)]
    );

    return result[0].toBoolean();
  }

  try_setVersionURL(
    appVersionID: Address,
    url: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "setVersionURL",
      "setVersionURL(address,string):(bool)",
      [ethereum.Value.fromAddress(appVersionID), ethereum.Value.fromString(url)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class AddOrgMemberCall extends ethereum.Call {
  get inputs(): AddOrgMemberCall__Inputs {
    return new AddOrgMemberCall__Inputs(this);
  }

  get outputs(): AddOrgMemberCall__Outputs {
    return new AddOrgMemberCall__Outputs(this);
  }
}

export class AddOrgMemberCall__Inputs {
  _call: AddOrgMemberCall;

  constructor(call: AddOrgMemberCall) {
    this._call = call;
  }

  get orgID(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get memberID(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddOrgMemberCall__Outputs {
  _call: AddOrgMemberCall;

  constructor(call: AddOrgMemberCall) {
    this._call = call;
  }
}

export class ChangeOrgOwnerCall extends ethereum.Call {
  get inputs(): ChangeOrgOwnerCall__Inputs {
    return new ChangeOrgOwnerCall__Inputs(this);
  }

  get outputs(): ChangeOrgOwnerCall__Outputs {
    return new ChangeOrgOwnerCall__Outputs(this);
  }
}

export class ChangeOrgOwnerCall__Inputs {
  _call: ChangeOrgOwnerCall;

  constructor(call: ChangeOrgOwnerCall) {
    this._call = call;
  }

  get orgID(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ChangeOrgOwnerCall__Outputs {
  _call: ChangeOrgOwnerCall;

  constructor(call: ChangeOrgOwnerCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CreateAppCall extends ethereum.Call {
  get inputs(): CreateAppCall__Inputs {
    return new CreateAppCall__Inputs(this);
  }

  get outputs(): CreateAppCall__Outputs {
    return new CreateAppCall__Outputs(this);
  }
}

export class CreateAppCall__Inputs {
  _call: CreateAppCall;

  constructor(call: CreateAppCall) {
    this._call = call;
  }

  get appID(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get url(): string {
    return this._call.inputValues[2].value.toString();
  }

  get appType(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get dependencies(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }
}

export class CreateAppCall__Outputs {
  _call: CreateAppCall;

  constructor(call: CreateAppCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CreateAppVersionCall extends ethereum.Call {
  get inputs(): CreateAppVersionCall__Inputs {
    return new CreateAppVersionCall__Inputs(this);
  }

  get outputs(): CreateAppVersionCall__Outputs {
    return new CreateAppVersionCall__Outputs(this);
  }
}

export class CreateAppVersionCall__Inputs {
  _call: CreateAppVersionCall;

  constructor(call: CreateAppVersionCall) {
    this._call = call;
  }

  get appID(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get appVersionID(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get url(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CreateAppVersionCall__Outputs {
  _call: CreateAppVersionCall;

  constructor(call: CreateAppVersionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CreateIdentityCall extends ethereum.Call {
  get inputs(): CreateIdentityCall__Inputs {
    return new CreateIdentityCall__Inputs(this);
  }

  get outputs(): CreateIdentityCall__Outputs {
    return new CreateIdentityCall__Outputs(this);
  }
}

export class CreateIdentityCall__Inputs {
  _call: CreateIdentityCall;

  constructor(call: CreateIdentityCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get url(): string {
    return this._call.inputValues[1].value.toString();
  }

  get idDelegate(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class CreateIdentityCall__Outputs {
  _call: CreateIdentityCall;

  constructor(call: CreateIdentityCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CreateOrganizationCall extends ethereum.Call {
  get inputs(): CreateOrganizationCall__Inputs {
    return new CreateOrganizationCall__Inputs(this);
  }

  get outputs(): CreateOrganizationCall__Outputs {
    return new CreateOrganizationCall__Outputs(this);
  }
}

export class CreateOrganizationCall__Inputs {
  _call: CreateOrganizationCall;

  constructor(call: CreateOrganizationCall) {
    this._call = call;
  }

  get orgID(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get url(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CreateOrganizationCall__Outputs {
  _call: CreateOrganizationCall;

  constructor(call: CreateOrganizationCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RegisterNameCall extends ethereum.Call {
  get inputs(): RegisterNameCall__Inputs {
    return new RegisterNameCall__Inputs(this);
  }

  get outputs(): RegisterNameCall__Outputs {
    return new RegisterNameCall__Outputs(this);
  }
}

export class RegisterNameCall__Inputs {
  _call: RegisterNameCall;

  constructor(call: RegisterNameCall) {
    this._call = call;
  }

  get appID(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RegisterNameCall__Outputs {
  _call: RegisterNameCall;

  constructor(call: RegisterNameCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RemoveOrgMemberCall extends ethereum.Call {
  get inputs(): RemoveOrgMemberCall__Inputs {
    return new RemoveOrgMemberCall__Inputs(this);
  }

  get outputs(): RemoveOrgMemberCall__Outputs {
    return new RemoveOrgMemberCall__Outputs(this);
  }
}

export class RemoveOrgMemberCall__Inputs {
  _call: RemoveOrgMemberCall;

  constructor(call: RemoveOrgMemberCall) {
    this._call = call;
  }

  get orgID(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get memberID(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveOrgMemberCall__Outputs {
  _call: RemoveOrgMemberCall;

  constructor(call: RemoveOrgMemberCall) {
    this._call = call;
  }
}

export class SetAppOwnerCall extends ethereum.Call {
  get inputs(): SetAppOwnerCall__Inputs {
    return new SetAppOwnerCall__Inputs(this);
  }

  get outputs(): SetAppOwnerCall__Outputs {
    return new SetAppOwnerCall__Outputs(this);
  }
}

export class SetAppOwnerCall__Inputs {
  _call: SetAppOwnerCall;

  constructor(call: SetAppOwnerCall) {
    this._call = call;
  }

  get appID(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetAppOwnerCall__Outputs {
  _call: SetAppOwnerCall;

  constructor(call: SetAppOwnerCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SetDelegateCall extends ethereum.Call {
  get inputs(): SetDelegateCall__Inputs {
    return new SetDelegateCall__Inputs(this);
  }

  get outputs(): SetDelegateCall__Outputs {
    return new SetDelegateCall__Outputs(this);
  }
}

export class SetDelegateCall__Inputs {
  _call: SetDelegateCall;

  constructor(call: SetDelegateCall) {
    this._call = call;
  }

  get idDelegate(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDelegateCall__Outputs {
  _call: SetDelegateCall;

  constructor(call: SetDelegateCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SetURLCall extends ethereum.Call {
  get inputs(): SetURLCall__Inputs {
    return new SetURLCall__Inputs(this);
  }

  get outputs(): SetURLCall__Outputs {
    return new SetURLCall__Outputs(this);
  }
}

export class SetURLCall__Inputs {
  _call: SetURLCall;

  constructor(call: SetURLCall) {
    this._call = call;
  }

  get identity(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get url(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetURLCall__Outputs {
  _call: SetURLCall;

  constructor(call: SetURLCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SetVersionURLCall extends ethereum.Call {
  get inputs(): SetVersionURLCall__Inputs {
    return new SetVersionURLCall__Inputs(this);
  }

  get outputs(): SetVersionURLCall__Outputs {
    return new SetVersionURLCall__Outputs(this);
  }
}

export class SetVersionURLCall__Inputs {
  _call: SetVersionURLCall;

  constructor(call: SetVersionURLCall) {
    this._call = call;
  }

  get appVersionID(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get url(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetVersionURLCall__Outputs {
  _call: SetVersionURLCall;

  constructor(call: SetVersionURLCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
